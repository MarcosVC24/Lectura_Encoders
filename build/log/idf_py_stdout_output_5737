[1/10] Performing build step for 'bootloader'
[1/1] cd /home/marcos/Esp32/lectura_encoders/build/bootloader/esp-idf/esptool_py && /home/marcos/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/marcos/Esp32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/marcos/Esp32/lectura_encoders/build/bootloader/bootloader.bin
Bootloader binary size 0x5250 bytes. 0x2db0 bytes (36%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/lectura_encoders.c.obj
/home/marcos/Esp32/lectura_encoders/main/lectura_encoders.c:34:15: warning: 'conversion_table_8bits' defined but not used [-Wunused-variable]
   34 | static int8_t conversion_table_8bits [8] = {-128, 64, 32, 16, 8, 4, 2, 1};
      |               ^~~~~~~~~~~~~~~~~~~~~~
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable lectura_encoders.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/marcos/Esp32/lectura_encoders/build/lectura_encoders.bin
[7/8] cd /home/marcos/Esp32/lectura_encoders/build/esp-idf/esptool_py && /home/marcos/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/marcos/Esp32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/marcos/Esp32/lectura_encoders/build/partition_table/partition-table.bin /home/marcos/Esp32/lectura_encoders/build/lectura_encoders.bin
lectura_encoders.bin binary size 0x3b750 bytes. Smallest app partition is 0x100000 bytes. 0xc48b0 bytes (77%) free.
[7/8] cd /home/marcos/Esp32/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/marcos/Esp32/esp-idf -D "SERIAL_TOOL=/home/marcos/.espressif/python_env/idf5.2_py3.10_env/bin/python;;/home/marcos/Esp32/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/marcos/Esp32/lectura_encoders/build -P /home/marcos/Esp32/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/ttyACM0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 lectura_encoders.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port /dev/ttyACM0
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.1)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_1v8)
Crystal is 40MHz
MAC: 34:85:18:a1:5d:b8
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x0004bfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 21072 bytes to 13074...
Writing at 0x00000000... (100 %)
Wrote 21072 bytes (13074 compressed) at 0x00000000 in 0.4 seconds (effective 473.6 kbit/s)...
Hash of data verified.
Compressed 243536 bytes to 123954...
Writing at 0x00010000... (12 %)
Writing at 0x0001cb84... (25 %)
Writing at 0x000255a5... (37 %)
Writing at 0x0002bee3... (50 %)
Writing at 0x00032083... (62 %)
Writing at 0x0003b104... (75 %)
Writing at 0x00041394... (87 %)
Writing at 0x00047ae8... (100 %)
Wrote 243536 bytes (123954 compressed) at 0x00010000 in 2.9 seconds (effective 666.3 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 528.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
