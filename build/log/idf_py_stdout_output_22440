[1/9] Performing build step for 'bootloader'
[1/1] cd /home/marcos/Esp32/lectura_encoders/build/bootloader/esp-idf/esptool_py && /home/marcos/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/marcos/Esp32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/marcos/Esp32/lectura_encoders/build/bootloader/bootloader.bin
Bootloader binary size 0x5250 bytes. 0x2db0 bytes (36%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/lectura_encoders.c.obj
/home/marcos/Esp32/lectura_encoders/main/lectura_encoders.c:36:16: warning: 'conversion_table_12bits' defined but not used [-Wunused-variable]
   36 | static int16_t conversion_table_12bits [12] = {-2048, 1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1}; // Tabla de conversión para 12 bits
      |                ^~~~~~~~~~~~~~~~~~~~~~~
/home/marcos/Esp32/lectura_encoders/main/lectura_encoders.c:35:15: warning: 'conversion_table_8bits' defined but not used [-Wunused-variable]
   35 | static int8_t conversion_table_8bits [8] = {-128, 64, 32, 16, 8, 4, 2, 1}; // Tabla de conversión para 8 bits
      |               ^~~~~~~~~~~~~~~~~~~~~~
[3/7] Linking C static library esp-idf/main/libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable lectura_encoders.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/marcos/Esp32/lectura_encoders/build/lectura_encoders.bin
[7/7] cd /home/marcos/Esp32/lectura_encoders/build/esp-idf/esptool_py && /home/marcos/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/marcos/Esp32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/marcos/Esp32/lectura_encoders/build/partition_table/partition-table.bin /home/marcos/Esp32/lectura_encoders/build/lectura_encoders.bin
lectura_encoders.bin binary size 0x3ae60 bytes. Smallest app partition is 0x100000 bytes. 0xc51a0 bytes (77%) free.
