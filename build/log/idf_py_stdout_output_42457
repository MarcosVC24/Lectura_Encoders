[1/10] Performing build step for 'bootloader'
[1/1] cd /home/marcos/Esp32/lectura_encoders/build/bootloader/esp-idf/esptool_py && /home/marcos/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/marcos/Esp32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/marcos/Esp32/lectura_encoders/build/bootloader/bootloader.bin
Bootloader binary size 0x5250 bytes. 0x2db0 bytes (36%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/lectura_encoders.c.obj
/home/marcos/Esp32/lectura_encoders/main/lectura_encoders.c: In function 'app_main':
/home/marcos/Esp32/lectura_encoders/main/lectura_encoders.c:105:26: warning: comparison is always true due to limited range of data type [-Wtype-limits]
  105 |     for(uint8_t i = 0; i < 256; i ++){
      |                          ^
/home/marcos/Esp32/lectura_encoders/main/lectura_encoders.c: At top level:
/home/marcos/Esp32/lectura_encoders/main/lectura_encoders.c:35:15: warning: 'conversion_table_8bits' defined but not used [-Wunused-variable]
   35 | static int8_t conversion_table_8bits [8] = {-128, 64, 32, 16, 8, 4, 2, 1}; // Tabla de conversiÃ³n para 8 bits
      |               ^~~~~~~~~~~~~~~~~~~~~~
[3/8] Linking C static library esp-idf/main/libmain.a
