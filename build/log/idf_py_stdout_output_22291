[1/9] Performing build step for 'bootloader'
[1/1] cd /home/marcos/Esp32/lectura_encoders/build/bootloader/esp-idf/esptool_py && /home/marcos/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/marcos/Esp32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/marcos/Esp32/lectura_encoders/build/bootloader/bootloader.bin
Bootloader binary size 0x5250 bytes. 0x2db0 bytes (36%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/lectura_encoders.c.obj
In file included from /home/marcos/Esp32/esp-idf/components/esp_hw_support/include/esp_intr_alloc.h:12,
                 from /home/marcos/Esp32/esp-idf/components/esp_hw_support/include/esp_cpu.h:20,
                 from /home/marcos/Esp32/esp-idf/components/esp_hw_support/include/spinlock.h:11,
                 from /home/marcos/Esp32/esp-idf/components/freertos/FreeRTOS-Kernel/portable/xtensa/include/freertos/portmacro.h:49,
                 from /home/marcos/Esp32/esp-idf/components/freertos/FreeRTOS-Kernel/include/freertos/portable.h:57,
                 from /home/marcos/Esp32/esp-idf/components/freertos/FreeRTOS-Kernel/include/freertos/FreeRTOS.h:69,
                 from /home/marcos/Esp32/lectura_encoders/main/lectura_encoders.c:3:
/home/marcos/Esp32/lectura_encoders/main/lectura_encoders.c: In function 'app_main':
/home/marcos/Esp32/lectura_encoders/main/lectura_encoders.c:105:44: warning: passing argument 1 of 'i2c_master_receive' from incompatible pointer type [-Wincompatible-pointer-types]
  105 |         ESP_ERROR_CHECK(i2c_master_receive(i2c_dev_handle, dataBuff, 5, 10));
      |                                            ^~~~~~~~~~~~~~
      |                                            |
      |                                            struct i2c_master_dev_t **
/home/marcos/Esp32/esp-idf/components/esp_common/include/esp_err.h:117:30: note: in definition of macro 'ESP_ERROR_CHECK'
  117 |         esp_err_t err_rc_ = (x);                                        \
      |                              ^
In file included from /home/marcos/Esp32/lectura_encoders/main/lectura_encoders.c:9:
/home/marcos/Esp32/esp-idf/components/driver/i2c/include/driver/i2c_master.h:155:54: note: expected 'i2c_master_dev_handle_t' {aka 'struct i2c_master_dev_t *'} but argument is of type 'struct i2c_master_dev_t **'
  155 | esp_err_t i2c_master_receive(i2c_master_dev_handle_t i2c_dev, uint8_t *read_buffer, size_t read_size, int xfer_timeout_ms);
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~
/home/marcos/Esp32/lectura_encoders/main/lectura_encoders.c: At top level:
/home/marcos/Esp32/lectura_encoders/main/lectura_encoders.c:35:15: warning: 'conversion_table_8bits' defined but not used [-Wunused-variable]
   35 | static int8_t conversion_table_8bits [8] = {-128, 64, 32, 16, 8, 4, 2, 1}; // Tabla de conversi√≥n para 8 bits
      |               ^~~~~~~~~~~~~~~~~~~~~~
[3/7] Linking C static library esp-idf/main/libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable lectura_encoders.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/marcos/Esp32/lectura_encoders/build/lectura_encoders.bin
[7/7] cd /home/marcos/Esp32/lectura_encoders/build/esp-idf/esptool_py && /home/marcos/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/marcos/Esp32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/marcos/Esp32/lectura_encoders/build/partition_table/partition-table.bin /home/marcos/Esp32/lectura_encoders/build/lectura_encoders.bin
lectura_encoders.bin binary size 0x3b830 bytes. Smallest app partition is 0x100000 bytes. 0xc47d0 bytes (77%) free.
